"use strict";(self.webpackChunkthe_codex_docusaurus=self.webpackChunkthe_codex_docusaurus||[]).push([[935],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(f,s(s({ref:n},u),{},{components:t})):a.createElement(f,s({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4492:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:2},s="Hooks de React",i={unversionedId:"guia-frontend/code/hooks",id:"guia-frontend/code/hooks",title:"Hooks de React",description:"En React hacemos uso de sus hooks, tales como: useEffect, useMemo o useCallback. Ac\xe1 encontrar\xe1s",source:"@site/docs/guia-frontend/code/hooks.md",sourceDirName:"guia-frontend/code",slug:"/guia-frontend/code/hooks",permalink:"/the-codex/guia-frontend/code/hooks",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Typescript",permalink:"/the-codex/guia-frontend/code/typescript"},next:{title:"Nombres de archivos, variables, etc.",permalink:"/the-codex/guia-frontend/code/naming"}},l={},c=[{value:"El hook useEffect",id:"el-hook-useeffect",level:2},{value:"Uso Recomendado \u2705",id:"uso-recomendado-",level:3},{value:"Uso No Recomendado \u274c",id:"uso-no-recomendado-",level:3},{value:"El hook useMemo",id:"el-hook-usememo",level:2},{value:"El hook useCallback",id:"el-hook-usecallback",level:2}],u={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hooks-de-react"},"Hooks de React"),(0,r.kt)("p",null,"En React hacemos uso de sus hooks, tales como: ",(0,r.kt)("inlineCode",{parentName:"p"},"useEffect"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"useCallback"),". Ac\xe1 encontrar\xe1s\nlas recomendaciones que hacemos sobre su uso."),(0,r.kt)("h2",{id:"el-hook-useeffect"},"El hook useEffect"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useEffect")," es el hook m\xe1s conocido de React, y probablemente con es el primer hook con el que nos\nfamiliarizamos. Por esta raz\xf3n, es importante saber cu\xe1l es su uso recomendado."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Uso recomendado"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u2705 Para hacer ",(0,r.kt)("inlineCode",{parentName:"li"},"fetch")," de datos. Aunque, este caso en particular no aplica si estamos usando una\nlibrer\xeda como ",(0,r.kt)("a",{parentName:"li",href:"https://tanstack.com/query/v4/"},"React Query")," que se encarga de esto por nosotros."),(0,r.kt)("li",{parentName:"ul"},"\u2705 Para sincronizar un widget que no es de React con un estado, o para actualizar nuestro componente\ncon alg\xfan cambio en el DOM."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"No recomendado para"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u274c Filtrar o transformar datos."),(0,r.kt)("li",{parentName:"ul"},"\u274c Manejar eventos del usuario.")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Para conocer con m\xe1s detalle cada uno de los casos en los que ",(0,r.kt)("strong",{parentName:"p"},"no se recomienda")," utilizar un efecto,\npuedes revisar la ",(0,r.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/learn/you-might-not-need-an-effect"},"siguiente documentaci\xf3n"),".")),(0,r.kt)("h3",{id:"uso-recomendado-"},"Uso Recomendado \u2705"),(0,r.kt)("p",null,"\u25ba ",(0,r.kt)("strong",{parentName:"p"},"Sincronizar un widget que no es de React con un estado")),(0,r.kt)("p",null,"Si intentamos hacer cambios en el DOM como a continuaci\xf3n:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const VideoPlayer = ({ src, isPlaying }) => {\n  const ref = useRef(null);\n\n  // highlight-start\n  if (isPlaying) {\n    ref.current.play(); // Calling these while rendering isn't allowed.\n  } else {\n    ref.current.play();\n  }\n  // highlight-end\n\n  // <video> doesn\u2019t have an isPlaying prop.\n  return <video ref={ref} src={src} loop playsInline />;\n};\n")),(0,r.kt)("p",null,"\ud83d\udeab Recibiremos la alerta ",(0,r.kt)("inlineCode",{parentName:"p"},"Cannot read properties of null")," porque el componente no se ha terminado de\nrenderizar, y por lo tanto ",(0,r.kt)("inlineCode",{parentName:"p"},"ref")," a\xfan no est\xe1 definido."),(0,r.kt)("p",null,"\ud83c\udfaf Para este caso en particular necesitaremos hacer uso del hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useEffect")," para acceder a ",(0,r.kt)("inlineCode",{parentName:"p"},"ref")," una\nvez que haya terminado el render del componente y as\xed gatillar un evento sobre el widget:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const VideoPlayer = ({ src, isPlaying }) => {\n  const ref = useRef(null);\n\n  // highlight-start\n  useEffect(() => {\n    if (isPlaying) {\n      ref.current.play();\n    } else {\n      ref.current.play();\n    }\n  }, [isPlaying]);\n  // highlight-end\n\n  return <video ref={ref} src={src} loop playsInline />;\n};\n")),(0,r.kt)("h3",{id:"uso-no-recomendado-"},"Uso No Recomendado \u274c"),(0,r.kt)("p",null,"\u25ba ",(0,r.kt)("strong",{parentName:"p"},"Setear un estado innecesario")),(0,r.kt)("p",null,"Hay veces en que nos encontraremos con casos donde se setean estados dentro de un efecto:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = ({ users }) => {\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [search, setSearch] = useState("");\n\n  const getFilteredUsers = () =>\n    users.filter((user) => user.name.includes(search));\n\n  // highlight-start\n  useEffect(() => {\n    setFilteredUsers(getFilteredUsers());\n  });\n  // highlight-end\n\n  return <List users={filteredUsers} />;\n};\n')),(0,r.kt)("p",null,"En este caso no es necesario utilizar el efecto porque el estado ",(0,r.kt)("inlineCode",{parentName:"p"},"filteredUsers")," no es realmente\nnecesario, y puede ser reemplazado por una ",(0,r.kt)("inlineCode",{parentName:"p"},"const"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = ({ users }) => {\n  const [search, setSearch] = useState("");\n  // highlight-start\n  const filteredUsers = users.filter(user => user.name.includes(search));\n  // highlight-end\n\n  ...\n\n  return (\n    <List users={filteredUsers} />\n  );\n}\n')),(0,r.kt)("h2",{id:"el-hook-usememo"},"El hook useMemo"),(0,r.kt)("p",null,"El hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo")," nos ser\xe1 de ayuda a la hora de memorizar el resultado de alguna funci\xf3n que realiza\nc\xe1lculos que podr\xedan toma mucho tiempo y reducir el rendimiento de nuestro componente."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Para conocer con m\xe1s detalle cada uno de los casos en los que podr\xedas utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo"),",\npuedes revisar la ",(0,r.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/apis/react/useMemo"},"siguiente documentaci\xf3n"),".")),(0,r.kt)("p",null,"En el ejemplo anterior, si ",(0,r.kt)("inlineCode",{parentName:"p"},"users")," tuviera demasiados registros nos ser\xeda de ayuda memorizar el\nfiltro de ",(0,r.kt)("inlineCode",{parentName:"p"},"users"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = ({ users }) => {\n  const [search, setSearch] = useState("");\n  // highlight-start\n  const filteredUsers = useMemo(() => {\n    users.filter(user => user.name.includes(search));\n  }, [users, search]\n  // highlight-end\n\n  ...\n\n  return (\n    <List users={filteredUsers} />\n  );\n}\n')),(0,r.kt)("p",null,"\ud83c\udfaf ",(0,r.kt)("strong",{parentName:"p"},"\xbfC\xf3mo saber si nuestra funci\xf3n tomar\xe1 mucho tiempo?")),(0,r.kt)("p",null,"Para saber si nuestra funci\xf3n tomar\xe1 mucho tiempo y es sujeto de memorizarla con ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo")," podemos\nusar ",(0,r.kt)("inlineCode",{parentName:"p"},"console.time")," para identificar cu\xe1nto tiempo toma la ejecuci\xf3n de determinada rutina en\nmilisegundos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const App = ({ users }) => {\n  const [search, setSearch] = useState("");\n  // highlight-start\n  console.time("filteredUsers");\n  const filteredUsers = users.filter(user => user.name.includes(search));\n  console.time("filteredUsers");\n  // highlight-end\n\n  ...\n\n  return (\n    <List users={filteredUsers} />\n  );\n}\n')),(0,r.kt)("p",null,"As\xed veremos en el output de la consola cu\xe1nto tiempo toma la ejecuci\xf3n."),(0,r.kt)("admonition",{type:"success"},(0,r.kt)("p",{parentName:"admonition"},"Se recomienda memorizar el resultado de una funci\xf3n s\xf3lo cuando la ejecuci\xf3n tarde m\xe1s de 1 milisegundo,\npor lo que no ser\xe1 necesario en la mayor\xeda de los casos.")),(0,r.kt)("h2",{id:"el-hook-usecallback"},"El hook useCallback"),(0,r.kt)("p",null,"El hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useCallback")," es bastante similar al hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo")," porque nos ayuda a memorizar, s\xf3lo que en este\ncaso lo que memorizaremos ser\xe1 la definici\xf3n de una funci\xf3n en vez de su resultado."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Para conocer con m\xe1s detalle cada uno de los casos en los que podr\xedas utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"useCallback"),",\npuedes revisar la ",(0,r.kt)("a",{parentName:"p",href:"https://beta.reactjs.org/apis/react/useCallback"},"siguiente documentaci\xf3n"),".")),(0,r.kt)("p",null,"\u2753 ",(0,r.kt)("strong",{parentName:"p"},"\xbfEn qu\xe9 caso podemos necesitarlo?")),(0,r.kt)("p",null,"Un caso com\xfan de uso es cuando alguna funci\xf3n es una dependencia de un efecto. Esto, porque cada vez que\nse renderiza nuestro componente, la funci\xf3n es definida nuevamente y el efecto se gatilla porque\nidentifica en cada render que la funci\xf3n ha cambiado:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const App = () => {\n  const [users, setUsers] = useState([]);\n  ...\n  // highlight-start\n  const printUsers = () => {\n    console.log(users);\n  };\n\n  useEffect (() => {\n    printUsers();\n  }, [users, printUsers]);\n  // highlight-end\n\n  return (\n    <List users={users} />\n  );\n}\n")),(0,r.kt)("p",null,"\ud83d\udeab Recibiremos la alerta ",(0,r.kt)("inlineCode",{parentName:"p"},"function makes the dependencies of useEffect Hook change on every render. Move it inside the useEffect callback. Alternatively, wrap the 'printUsers' definition into its own useCallback() Hook.")," porque la definici\xf3n de la funci\xf3n cambia con cada render y gatilla el efecto."),(0,r.kt)("p",null,"\ud83c\udfaf Para este caso en particular necesitaremos hacer uso del hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useCallback")," para memorizar la definici\xf3n\nde la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"printUsers"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const App = () => {\n  const [users, setUsers] = useState([]);\n  ...\n  // highlight-start\n  const printUsers = useCallback(() => {\n    console.log(users);\n  }, [users]);\n  // highlight-end\n\n  useEffect (() => {\n    printUsers();\n  }, [users, printUsers]);\n\n  return (\n    <List users={users} />\n  );\n}\n")),(0,r.kt)("p",null,"De esta forma ",(0,r.kt)("inlineCode",{parentName:"p"},"printUsers")," cambiar\xe1 s\xf3lo cuando se actualice su dependencia ",(0,r.kt)("inlineCode",{parentName:"p"},"users")," y s\xf3lo en ese caso\ngatillar\xe1 el efecto."),(0,r.kt)("admonition",{type:"success"},(0,r.kt)("p",{parentName:"admonition"},"Se recomienda memorizar la definici\xf3n de una funci\xf3n s\xf3lo si recibimos alguna alerta de parte del linter,\npor lo que no ser\xe1 necesario en la mayor\xeda de los casos.")))}d.isMDXComponent=!0}}]);