"use strict";(self.webpackChunkthe_codex_docusaurus=self.webpackChunkthe_codex_docusaurus||[]).push([[86],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8266:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1},s="Queries y calls",i={unversionedId:"guia-frontend/code/queries",id:"guia-frontend/code/queries",title:"Queries y calls",description:"En nuestro frontend web, hacemos nuestras llamadas a la API desde el frontend usando Axios",source:"@site/docs/guia-frontend/code/queries.md",sourceDirName:"guia-frontend/code",slug:"/guia-frontend/code/queries",permalink:"/the-codex/guia-frontend/code/queries",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Desarrollo",permalink:"/the-codex/code"},next:{title:"Nombres de archivos y variables",permalink:"/the-codex/guia-frontend/code/naming"}},c={},l=[{value:"Contexto",id:"contexto",level:2},{value:"\xbfC\xf3mo ordenamos las queries y calls? \ud83c\udfaf",id:"c\xf3mo-ordenamos-las-queries-y-calls-",level:2},{value:"Ejemplo \ud83d\udd0d",id:"ejemplo-",level:2}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"queries-y-calls"},"Queries y calls"),(0,r.kt)("p",null,"En nuestro frontend web, hacemos nuestras llamadas a la API desde el frontend usando ",(0,r.kt)("a",{parentName:"p",href:"https://axios-http.com/"},"Axios"),"\ny ",(0,r.kt)("a",{parentName:"p",href:"https://tanstack.com/query/v4/"},"React Query"),". Aqu\xed ver\xe1s c\xf3mo se deben llamar y ordenar los archivos que contienen las\nqueries de ",(0,r.kt)("a",{parentName:"p",href:"https://tanstack.com/query/v4/"},"React Query")," y las funciones que hacen las llamadas a la API."),(0,r.kt)("admonition",{title:"TL;DR:",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Queries y calls se agregan en una carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"/api")," dentro de cada carpeta de feature. Ejemplo de nombre de\nquery: ",(0,r.kt)("inlineCode",{parentName:"p"},"useFetchTransactions"),". Ejemplo de nombre de call: ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchTransactions"),".")),(0,r.kt)("h2",{id:"contexto"},"Contexto"),(0,r.kt)("p",null,"Para interactuar con la API desde el frontend, usamos la librer\xeda ",(0,r.kt)("a",{parentName:"p",href:"https://tanstack.com/query/v4/"},"React Query"),"\nque ofrece hooks como ",(0,r.kt)("inlineCode",{parentName:"p"},"useQuery")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"useMutation"),", y funcionalidades como manejo de estado, manejo de errores,\nestrategias de refetching, caching, etc. Sobre estos hooks tenemos wrappers para agregar su configuraci\xf3n.\nA estos wrappers les llamaremos ",(0,r.kt)("strong",{parentName:"p"},"queries")," y puedes ver un ejemplo\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/budacom/surbtc/blob/master/app/react/features/investments/api/useFetchTransactions.ts"},"ac\xe1"),"."),(0,r.kt)("p",null,"Pero React Query no hace la llamada misma a la API. A los queries hay que entregarles una funci\xf3n que hace la llamada.\nA estas funciones les llamaremos ",(0,r.kt)("strong",{parentName:"p"},"calls")," (por detr\xe1s usan Axios) y puedes ver un ejemplo\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/budacom/surbtc/blob/master/app/react/features/investments/api/fetchTransactions.ts"},"ac\xe1"),"."),(0,r.kt)("h2",{id:"c\xf3mo-ordenamos-las-queries-y-calls-"},"\xbfC\xf3mo ordenamos las queries y calls? \ud83c\udfaf"),(0,r.kt)("p",null,"En cada carpeta de feature (por ejemplo ",(0,r.kt)("inlineCode",{parentName:"p"},"/investments"),") o en la carpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"/shared"),", debe existir una\ncarpeta ",(0,r.kt)("inlineCode",{parentName:"p"},"/api")," que contiene las queries y calls. Si aumenta el n\xfamero de archivos de la carpeta,\nse puede separar en dos, una para queries y otra para calls."),(0,r.kt)("p",null,"\ud83d\udcdd Cada query tiene su propio archivo, y cada call tiene su propio archivo."),(0,r.kt)("p",null,"Las ",(0,r.kt)("strong",{parentName:"p"},"queries")," y sus correspondientes archivos tienen que llamarse de la forma ",(0,r.kt)("inlineCode",{parentName:"p"},"use<Action><Resource>"),",\npor ejemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"useFetchTransactions"),". Con ",(0,r.kt)("em",{parentName:"p"},"Action")," nos referimos a un nombre descriptivo de lo que hace la\nllamada a la API (fetch, create, delete, update, cancel, etc.), no al verbo HTTP."),(0,r.kt)("p",null,"Las ",(0,r.kt)("strong",{parentName:"p"},"calls")," y sus correspondientes archivos tienen que llamarse de la forma ",(0,r.kt)("inlineCode",{parentName:"p"},"<action><Resource>"),",\npor ejemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchTransactions"),"."),(0,r.kt)("h2",{id:"ejemplo-"},"Ejemplo \ud83d\udd0d"),(0,r.kt)("p",null,"Puedes ver un ejemplo en el ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/budacom/surbtc/tree/master/app/react/features/investments"},"directorio de la feature de inversiones"),"\nen SurBTC, que tiene un archivo ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/budacom/surbtc/blob/master/app/react/features/investments/api/fetchTransactions.ts"},"api/fetchTransactions.ts"),"\ny un archivo ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/budacom/surbtc/blob/master/app/react/features/investments/api/useFetchTransactions.ts"},"api/useFetchTransaction.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"investments\n\u2514\u2500\u2500 api\n    \u251c\u2500\u2500 fetchTransactions.ts\n    \u2514\u2500\u2500 useFetchTransactions.ts\n")))}u.isMDXComponent=!0}}]);